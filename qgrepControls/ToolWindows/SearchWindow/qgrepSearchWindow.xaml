<UserControl x:Class="qgrepControls.SearchWindow.qgrepSearchWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:qgrepControls.SearchWindow"
             xmlns:resx="clr-namespace:qgrepControls.Properties"
             xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:modelViews="clr-namespace:qgrepControls.ModelViews"
             mc:Ignorable="d" Style="{DynamicResource SomeWindow}" x:Name="SearchWindowControl" IsVisibleChanged="SearchWindowControl_IsVisibleChanged"
             d:DesignHeight="600" d:DesignWidth="1000" GotFocus="SearchWindowControl_GotFocus" PreviewKeyDown="SearchWindowControl_PreviewKeyDown" GotKeyboardFocus="SearchWindowControl_GotKeyboardFocus">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/qgrepControls;component/ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate DataType="{x:Type modelViews:HistoricItem}">
                <StackPanel Orientation="Horizontal" Width="Auto" HorizontalAlignment="Left" FlowDirection="LeftToRight">
                    <Label Style="{DynamicResource HistoricOperation}" Content="{Binding Path=OperationBeginText}" Visibility="{Binding Path=OperationVisibility}" />
                    <Label Style="{DynamicResource HistoricEntry}" Content="{Binding Path=Text}" />
                    <Label Style="{DynamicResource HistoricOperation}" Content="{Binding Path=OperationEndText}" Visibility="{Binding Path=OperationVisibility}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid KeyboardNavigation.TabNavigation="Cycle">
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="24" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" x:Name="SearchGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Grid.ColumnSpan="2" x:Name="SearchInput" TabIndex="0" BorderThickness="0,1,0,1" Style="{DynamicResource SomeTextBoxStyle}" 
TextChanged="SearchInput_TextChanged" LostFocus="SearchInput_LostFocus" KeyDown="SearchInput_KeyDown"/>
            <TextBlock Grid.Column="0" x:Name="SearchLabel" Text="{x:Static resx:Resources.SearchLabel}" Style="{DynamicResource SomeHintLabel}" />
            <StackPanel Grid.Column="1" x:Name="AdvancedSearchPanel" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Height="24">
                <StackPanel x:Name="AdvancedSearchInnerPanel" Margin="0,-2,1,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Button x:Name="SearchButton" Style="{StaticResource IconButton}" FontSize="14" Click="SearchButton_Click" Margin="1,3,5,0">
                        <Path Style="{DynamicResource SearchIcon}" />
                    </Button>
                    <Button x:Name="HistoryButton" Style="{StaticResource IconButton}" FontSize="14" Click="HistoryButton_Click" ToolTip="{x:Static resx:Resources.HistoryButton}" Margin="1,3,0,0">
                        <Path Style="{DynamicResource HistoryIcon}" />
                        <Button.ContextMenu>
                            <ContextMenu Name="HistoryContextMenu" Style="{StaticResource OtherContextMenu}">
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <CheckBox x:Name="SearchCaseSensitive" Style="{DynamicResource TextBoxToggle}" Click="CaseSensitive_Click" Margin="5,0,0,0" IsChecked="True" ToolTip="{x:Static resx:Resources.SearchCaseSensitive}">
                        <Path Style="{DynamicResource CaseSensitiveIcon}" />
                    </CheckBox>
                    <CheckBox x:Name="SearchWholeWord" Style="{DynamicResource TextBoxToggle}" IsChecked="True" Click="SearchWholeWord_Click" ToolTip="{x:Static resx:Resources.SearchWholeWord}">
                        <Grid Background="Transparent">
                            <Path Style="{DynamicResource WholeWordIcon}" />
                            <Path Style="{DynamicResource WholeWordIcon2}" />
                        </Grid>
                    </CheckBox>
                    <CheckBox x:Name="SearchRegEx" Style="{DynamicResource TextBoxToggle}" IsChecked="True" Click="SearchRegEx_Click" ToolTip="{x:Static resx:Resources.RegEx}">
                        <Path Style="{DynamicResource RegExIcon}" />
                    </CheckBox>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" x:Name="IncludeFilesGrid" Margin="0,-1,0,0">
            <TextBox x:Name="IncludeFilesInput" TabIndex="1" BorderThickness="0,1,0,1" Style="{DynamicResource SomeTextBoxStyle}" TextChanged="SearchInput_TextChanged" KeyDown="SearchInput_KeyDown"/>
            <TextBlock x:Name="IncludeFilesLabel" Text="{x:Static resx:Resources.IncludeFilesLabel}" Style="{DynamicResource SomeHintLabel}"/>
            <StackPanel x:Name="AdvancedIncludePanel" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Height="24">
                <StackPanel x:Name="AdvancedIncludeInnerPanel" Margin="0,-2,1,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <CheckBox x:Name="IncludeRegEx" Style="{DynamicResource TextBoxToggle}" Click="IncludeRegEx_Click" VerticalContentAlignment="Center" IsChecked="True" ToolTip="{x:Static resx:Resources.RegEx}">
                        <Path Style="{DynamicResource RegExIcon}" />
                    </CheckBox>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2" x:Name="ExcludeFilesGrid" Margin="0,-1,0,0">
            <TextBox x:Name="ExcludeFilesInput" TabIndex="2" BorderThickness="0,1,0,1" Style="{StaticResource SomeTextBoxStyle}" TextChanged="SearchInput_TextChanged" KeyDown="SearchInput_KeyDown"/>
            <TextBlock x:Name="ExcludeFilesLabel" Text="{x:Static resx:Resources.ExcludeFilesLabel}" Style="{DynamicResource SomeHintLabel}" />
            <StackPanel x:Name="AdvancedExcludePanel" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Height="24">
                <StackPanel x:Name="AdvancedExcludeInnerPanel" Margin="0,-2,1,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <CheckBox x:Name="ExcludeRegEx" Style="{DynamicResource TextBoxToggle}" IsChecked="True" Click="ExcludeRegEx_Click" ToolTip="{x:Static resx:Resources.RegEx}" >
                        <Path Style="{DynamicResource RegExIcon}" />
                    </CheckBox>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="3" x:Name="FilterResultsGrid" Margin="0,-1,0,0">
            <TextBox x:Name="FilterResultsInput" TabIndex="3" BorderThickness="0,1,0,1" Style="{StaticResource SomeTextBoxStyle}" TextChanged="FilterResultsInput_TextChanged"/>
            <TextBlock x:Name="FilterResultsLabel" Text="{x:Static resx:Resources.FilterResultsLabel}" Style="{DynamicResource SomeHintLabel}" />
            <StackPanel x:Name="FilterResultsPanel" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Height="24">
                <StackPanel x:Name="FilterResultsInnerPanel" Margin="0,-2,1,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <CheckBox x:Name="FilterRegEx" Style="{DynamicResource TextBoxToggle}" IsChecked="True" Click="FilterRegEx_Click" ToolTip="{x:Static resx:Resources.RegEx}">
                        <Path Style="{DynamicResource RegExIcon}" />
                    </CheckBox>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="4">
            <ListBox x:Name="SearchItemsListBox" Style="{DynamicResource ResultsListBox}" TabIndex="4" ItemsSource="{Binding}" KeyboardNavigation.TabNavigation="Once">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Style="{DynamicResource ResultPanel}" MouseDown="SearchResult_MouseDown" >
                            <Image Margin="4,0,-8,0" Width="16" Height="16" Source="{Binding ImageSource}">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Style="{DynamicResource ResultFile}" Text="{Binding Path=TrimmedFileAndLine}" />
                            <TextBlock Style="{DynamicResource ResultTextStart}" Text="{Binding Path=BeginText}" />
                            <TextBlock Style="{DynamicResource ResultHighlightedText}" Text="{Binding Path=HighlightedText}"/>
                            <TextBlock Style="{DynamicResource ResultTextEnd}" Text="{Binding Path=EndText}" />
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="MenuGoTo" Header="{x:Static resx:Resources.MenuGoTo}" InputGestureText="Enter" Click="MenuGoTo_Click"/>
                                    <MenuItem x:Name="MenuIncludeFile" Header="{x:Static resx:Resources.IncludeFile}" InputGestureText="Shift+Enter" Click="MenuIncludeFile_Click">
                                        <MenuItem.Style>
                                            <Style TargetType="MenuItem">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsActiveDocumentCpp}" Value="false">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem x:Name="MenuCopyText" Header="{x:Static resx:Resources.MenuCopyText}" InputGestureText="Ctrl+C" Click="MenuCopyText_Click"/>
                                    <MenuItem x:Name="MenuCopyFullPath" Header="{x:Static resx:Resources.MenuCopyFullPath}" Click="MenuCopyFullPath_Click"/>
                                    <MenuItem x:Name="MenuCopyResult" Header="{x:Static resx:Resources.MenuCopyResult}" Click="MenuCopyResult_Click"/>
                                    <Separator/>
                                    <MenuItem x:Name="MenuCopyAllResults" Header="{x:Static resx:Resources.MenuCopyAllResults}" Click="MenuCopyAllResults_Click"/>
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <TreeView x:Name="SearchItemsTreeView" TabIndex="4" ItemsSource="{Binding}" KeyboardNavigation.TabNavigation="Once">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource SomeTreeViewItem}">
                        <EventSetter Event="RequestBringIntoView" Handler="TreeViewItem_RequestBringIntoView"/>
                        <EventSetter Event="PreviewMouseDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        <EventSetter Event="Selected" Handler="OnSelected"/>
                        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type modelViews:SearchResultGroup}" ItemsSource="{Binding SearchResults}">
                        <DockPanel Style="{DynamicResource ResultGroupPanel}" RequestBringIntoView="TreeViewItem_RequestBringIntoView" MouseDown="SearchResult_MouseDown">
                            <TextBlock Style="{DynamicResource ResultGroupFile}" Text="{Binding Path=TrimmedFile}" />
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="MenuGoTo" Header="{x:Static resx:Resources.MenuGoTo}" InputGestureText="Enter" Click="MenuGoTo_Click"/>
                                    <MenuItem x:Name="MenuIncludeFile" Header="{x:Static resx:Resources.IncludeFile}" InputGestureText="Shift+Enter" Click="MenuIncludeFile_Click">
                                        <MenuItem.Style>
                                            <Style TargetType="MenuItem">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsActiveDocumentCpp}" Value="false">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                    <MenuItem x:Name="MenuCopyFullPath" Header="{x:Static resx:Resources.MenuCopyFullPath}" InputGestureText="Ctrl+C" Click="MenuCopyFullPath_Click"/>
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type modelViews:SearchResult}">
                        <DockPanel Style="{DynamicResource ResultPanel}" MouseDown="SearchResult_MouseDown">
                            <TextBlock Style="{DynamicResource ResultLine}" Text="{Binding Path=Line}" />
                            <Border Style="{DynamicResource ResultSeparator}"/>
                            <TextBlock Style="{DynamicResource ResultTextStart}" Text="{Binding Path=BeginText}" />
                            <TextBlock Style="{DynamicResource ResultHighlightedText}" Text="{Binding Path=HighlightedText}"/>
                            <TextBlock Style="{DynamicResource ResultTextEnd}" Text="{Binding Path=EndText}" />
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="MenuGoTo" Header="{x:Static resx:Resources.MenuGoTo}" InputGestureText="Enter"  Click="MenuGoTo_Click"/>
                                    <MenuItem x:Name="MenuIncludeFile" Header="{x:Static resx:Resources.IncludeFile}" InputGestureText="Shift+Enter" Click="MenuIncludeFile_Click">
                                        <MenuItem.Style>
                                            <Style TargetType="MenuItem">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsActiveDocumentCpp}" Value="false">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem x:Name="MenuCopyText" Header="{x:Static resx:Resources.MenuCopyText}" InputGestureText="Ctrl+C"  Click="MenuCopyText_Click"/>
                                    <MenuItem x:Name="MenuCopyFullPath" Header="{x:Static resx:Resources.MenuCopyFullPath}" Click="MenuCopyFullPath_Click"/>
                                    <MenuItem x:Name="MenuCopyResult" Header="{x:Static resx:Resources.MenuCopyResult}" Click="MenuCopyResult_Click"/>
                                    <Separator/>
                                    <MenuItem x:Name="MenuCopyAllResults" Header="{x:Static resx:Resources.MenuCopyAllResults}" Click="MenuCopyAllResults_Click"/>
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
            <Border x:Name="Overlay" Style="{DynamicResource OverlayBorder}" />
            <TextBlock x:Name="WarningText" Style="{DynamicResource OverlayText}" Text="{x:Static resx:Resources.NoSolutionLoaded}" />
        </Grid>
        <Grid Grid.Row="6">
            <StackPanel x:Name="InitPanel" Orientation="Horizontal" HorizontalAlignment="Right"  Margin="0,0,5,0">
                <TextBlock x:Name="InitInfo" Margin="0" Style="{DynamicResource SomeHintLabel}" VerticalAlignment="Center" HorizontalAlignment="Right" Height="16" Text="" />
                <ProgressBar IsTabStop="False" x:Name="InitProgress" Width="250" Margin="3,3,0,3"/>
                <Button IsTabStop="False" x:Name="InitButton" Style="{StaticResource IconButton}" FontSize="18" Click="InitButton_Click" ToolTip="{x:Static resx:Resources.UpdateIndex}">
                    <Path Style="{DynamicResource SyncIcon}" />
                </Button>
                <Button IsTabStop="False" x:Name="CleanButton" Style="{StaticResource IconButton}" FontSize="18" Click="CleanButton_Click" ToolTip="{x:Static resx:Resources.CleanAndUpdateIndex}">
                    <Grid Background="Transparent">
                        <Path Style="{DynamicResource TrashIcon}" />
                    </Grid>
                </Button>
            </StackPanel>
            <StackPanel x:Name="AdvancedPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <Button x:Name="KeyboardButton" Style="{StaticResource IconButton}" FontSize="14" Click="KeyboardButton_Click" ToolTip="{x:Static resx:Resources.CustomizeShortcuts}">
                    <Path Style="{DynamicResource KeyboardIcon}" />
                </Button>
                <Button x:Name="ColorsButton" Style="{StaticResource IconButton}" FontSize="14" Click="Colors_Click" ToolTip="{x:Static resx:Resources.CustomizeTheme}">
                    <Path Style="{DynamicResource ColorsIcon}" />
                </Button>
                <Button x:Name="AdvancedButton" Style="{StaticResource IconButton}" Click="AdvancedButton_Click" ToolTip="{x:Static resx:Resources.AdvancedSettings}">
                    <Path Style="{DynamicResource SettingsIcon}" />
                </Button>
                <Button x:Name="PathsButton" Style="{StaticResource IconButton}" FontSize="14" Click="PathsButton_Click" ToolTip="{x:Static resx:Resources.SearchConfigurations}">
                    <Path Style="{DynamicResource PathIcon}" />
                </Button>
                <wpfTool:CheckComboBox IsTabStop="False" x:Name="FiltersComboBox" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" DisplayMemberPath="Name" ValueMemberPath="Name" SelectedMemberPath="Name" Delimiter=", " ItemsSource="{Binding}" ItemSelectionChanged="FiltersComboBox_ItemSelectionChanged">
                </wpfTool:CheckComboBox>
                <TextBlock x:Name="InfoLabel" Style="{DynamicResource SomeHintLabel}"/>
                <TextBlock x:Name="ErrorLabel" Style="{DynamicResource SomeHintLabel}" Margin="-5,0,0,0" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
