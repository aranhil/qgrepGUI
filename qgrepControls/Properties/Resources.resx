<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="AddFilterTitle" xml:space="preserve">
    <value xml:lang="en">Add filter</value>
</data>
  <data name="AdvancedSettings" xml:space="preserve">
    <value>Advanced Settings</value>
  </data>
  <data name="AdvancedToggleContent" xml:space="preserve">
    <value xml:lang="en">‹‹ Advanced</value>
</data>
  <data name="AutomaticPopulationContent" xml:space="preserve">
    <value>Gather from solution</value>
</data>
  <data name="BasicToggleContent" xml:space="preserve">
    <value xml:lang="en">›› Basic</value>
</data>
  <data name="CannotCleanIndex" xml:space="preserve">
    <value>Cannot clean index: {0}</value>
  </data>
  <data name="CleanAndUpdateIndex" xml:space="preserve">
    <value>Clean and update index</value>
  </data>
  <data name="colors_schemes" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\colors-schemes.json;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="ConfigFormat" xml:space="preserve">
    <value xml:lang="en">Config{0}</value>
</data>
  <data name="ConfigOpenContent" xml:space="preserve">
    <value>Open location</value>
</data>
  <data name="CopyFullPath" xml:space="preserve">
  <value>Copy full path</value>
</data>
  <data name="CustomizeShortcuts" xml:space="preserve">
    <value>Customize shortcuts</value>
  </data>
  <data name="CustomizeTheme" xml:space="preserve">
    <value>Customize theme</value>
  </data>
  <data name="EditFilterTitle" xml:space="preserve">
    <value xml:lang="en">Edit filter</value>
</data>
  <data name="EditHotkeys" xml:space="preserve">
  <value>Edit hotkeys</value>
</data>
  <data name="ExcludeFilesLabel" xml:space="preserve">
    <value>Exclude files...</value>
  </data>
  <data name="ExcludeOptionContent" xml:space="preserve">
    <value xml:lang="en">Exclude</value>
</data>
  <data name="FileAndLine" xml:space="preserve">
    <value>{0}({1})</value>
  </data>
  <data name="FilterResultsLabel" xml:space="preserve">
    <value>Filter results...</value>
  </data>
  <data name="GroupFormat" xml:space="preserve">
    <value xml:lang="en">Group {0}</value>
</data>
  <data name="GroupsListBoxAddButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Add new group</value>
</data>
  <data name="GroupsListBoxEditButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Edit group name</value>
</data>
  <data name="GroupsListBoxRemoveAllButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove all groups</value>
</data>
  <data name="GroupsListBoxRemoveButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove selected group(s)</value>
</data>
  <data name="GroupsListBoxTitle" xml:space="preserve">
    <value xml:lang="en">Groups</value>
</data>
  <data name="HistoricOpen" xml:space="preserve">
    <value>Opened {0}</value>
  </data>
  <data name="HistoricSearch" xml:space="preserve">
    <value>Searched {0}</value>
  </data>
  <data name="HistoryButton" xml:space="preserve">
    <value>Show recent searches ({0})</value>
  </data>
  <data name="IncludeFilesLabel" xml:space="preserve">
    <value>Include files...</value>
  </data>
  <data name="IncludeOptionContent" xml:space="preserve">
    <value xml:lang="en">Include</value>
</data>
  <data name="InfoLabel" xml:space="preserve">
    <value>Info Label</value>
  </data>
  <data name="InitInfo" xml:space="preserve">
    <value>Init Info</value>
  </data>
  <data name="MenuCopyAllResults" xml:space="preserve">
    <value>Copy all results</value>
  </data>
  <data name="MenuCopyFullPath" xml:space="preserve">
    <value>Copy full path</value>
  </data>
  <data name="MenuCopyResult" xml:space="preserve">
    <value>Copy entire result</value>
  </data>
  <data name="MenuCopyText" xml:space="preserve">
    <value>Copy text</value>
  </data>
  <data name="MenuGoTo" xml:space="preserve">
    <value>Go to location</value>
  </data>
  <data name="NoSearchFoldersSet" xml:space="preserve">
    <value>No search folders set.</value>
  </data>
  <data name="NoSolutionLoaded" xml:space="preserve">
    <value>No solution loaded.</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
  <value>Open file</value>
</data>
  <data name="PathsListBoxAddButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Add new folder(s)</value>
</data>
  <data name="PathsListBoxEditButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Edit folder name</value>
</data>
  <data name="PathsListBoxRemoveAllButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove all folders</value>
</data>
  <data name="PathsListBoxRemoveButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove selected folder(s)</value>
</data>
  <data name="PathsListBoxTitle" xml:space="preserve">
    <value xml:lang="en">Folders</value>
</data>
  <data name="ProjectsListBoxAddButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Add new config</value>
</data>
  <data name="ProjectsListBoxEditButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Edit config name</value>
</data>
  <data name="ProjectsListBoxRemoveAllButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove all configs</value>
</data>
  <data name="ProjectsListBoxRemoveButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove selected config(s)</value>
</data>
  <data name="ProjectsListBoxTitle" xml:space="preserve">
    <value xml:lang="en">Configs</value>
</data>
  <data name="RegEx" xml:space="preserve">
    <value>Regular expressions ({0})</value>
  </data>
  <data name="RegExLabelContent" xml:space="preserve">
    <value xml:lang="en">RegEx:</value>
</data>
  <data name="RemoveExtraContent" xml:space="preserve">
    <value xml:lang="en">Remove extra projects and groups to go back to basic settings</value>
</data>
  <data name="RootContent" xml:space="preserve">
    <value xml:lang="en">&lt;root&gt;</value>
</data>
  <data name="RulesListBoxAddButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Add new filter</value>
</data>
  <data name="RulesListBoxEditButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Edit filter</value>
</data>
  <data name="RulesListBoxRemoveAllButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove all filters</value>
</data>
  <data name="RulesListBoxRemoveButtonTooltip" xml:space="preserve">
    <value xml:lang="en">Remove selected filter(s)</value>
</data>
  <data name="RulesListBoxTitle" xml:space="preserve">
    <value xml:lang="en">Filters</value>
</data>
  <data name="SearchCaseSensitive" xml:space="preserve">
    <value>Case sensitive ({0})</value>
  </data>
  <data name="SearchConfigurations" xml:space="preserve">
    <value>Search configurations</value>
  </data>
  <data name="SearchFileLabel" xml:space="preserve">
  <value>Search file...</value>
</data>
  <data name="SearchLabel" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="SearchWholeWord" xml:space="preserve">
    <value>Whole word ({0})</value>
  </data>
  <data name="SelectFolderPrompt" xml:space="preserve">
    <value xml:lang="en">Select folder(s)</value>
</data>
  <data name="Settings" xml:space="preserve">
  <value>Settings</value>
</data>
  <data name="ShowingResults" xml:space="preserve">
    <value>Showing {0} result(s) for "{1}".</value>
  </data>
  <data name="StopButtonContent" xml:space="preserve">
    <value>Stop</value>
</data>
  <data name="ThemeSettings" xml:space="preserve">
  <value>Theme settings</value>
</data>
  <data name="TypeLabelContent" xml:space="preserve">
    <value xml:lang="en">Type:</value>
</data>
  <data name="UpdateIndex" xml:space="preserve">
    <value>Update index</value>
  </data>
  <data name="UseGlobalPathContent" xml:space="preserve">
    <value>Use global path</value>
</data>
	<data name="PredefinedButtonTooltip" xml:space="preserve">
    <value xml:lang="en">A list of predefined regexes</value>
</data>
	<data name="PlainTextContent" xml:space="preserve">
    <value xml:lang="en">Plain Text</value>
</data>
	<data name="SaveButtonContent" xml:space="preserve">
    <value xml:lang="en">Save</value>
</data>
	<data name="CancelButtonContent" xml:space="preserve">
    <value xml:lang="en">Cancel</value>
</data>
	<data name="IncludeFilesLabelContent" xml:space="preserve">
    <value xml:lang="en">Include files:</value>
</data>
	<data name="ExcludeFilesLabelContent" xml:space="preserve">
    <value xml:lang="en">Exclude files:</value>
</data>
	<data name="FilterResultsLabelContent" xml:space="preserve">
    <value xml:lang="en">Filter results:</value>
</data>
	<data name="HistoryButtonLabelContent" xml:space="preserve">
    <value xml:lang="en">History button:</value>
</data>
	<data name="ShowOpenHistoryLabelContent" xml:space="preserve">
    <value xml:lang="en">Show open history:</value>
</data>
	<data name="SearchWhileTypingLabelContent" xml:space="preserve">
    <value xml:lang="en">Search while typing:</value>
</data>
	<data name="GroupByLabelContent" xml:space="preserve">
    <value xml:lang="en">Group by:</value>
</data>
	<data name="GroupExpandLabelContent" xml:space="preserve">
    <value xml:lang="en">Group expand:</value>
</data>
	<data name="PathStyleLabelContent" xml:space="preserve">
    <value xml:lang="en">Path style:</value>
</data>
	<data name="FilterSearchScopeLabelContent" xml:space="preserve">
    <value xml:lang="en">Filter search scope:</value>
</data>
	<data name="TrimSpacesOnCopyLabelContent" xml:space="preserve">
    <value xml:lang="en">Trim spaces on copy:</value>
</data>
	<data name="UpdateIndexAutomaticallyLabelContent" xml:space="preserve">
    <value xml:lang="en">Update index automatically:</value>
</data>
	<data name="NoneOptionContent" xml:space="preserve">
    <value xml:lang="en">None</value>
</data>
	<data name="FileOptionContent" xml:space="preserve">
    <value xml:lang="en">File</value>
</data>
	<data name="NeverOptionContent" xml:space="preserve">
    <value xml:lang="en">Never</value>
</data>
	<data name="AutomaticOptionContent" xml:space="preserve">
    <value xml:lang="en">Automatic</value>
</data>
	<data name="AlwaysOptionContent" xml:space="preserve">
    <value xml:lang="en">Always</value>
</data>
	<data name="AbsolutePathOptionContent" xml:space="preserve">
    <value xml:lang="en">Absolute path</value>
</data>
	<data name="RelativePathOptionContent" xml:space="preserve">
    <value xml:lang="en">Relative path</value>
</data>
	<data name="FileOnlyOptionContent" xml:space="preserve">
    <value xml:lang="en">File only</value>
</data>
	<data name="TextOnlyOptionContent" xml:space="preserve">
    <value xml:lang="en">Text only</value>
</data>
	<data name="PathOnlyOptionContent" xml:space="preserve">
    <value xml:lang="en">Path only</value>
</data>
	<data name="TextAndPathOptionContent" xml:space="preserve">
    <value xml:lang="en">Text and path</value>
</data>
</root>